
Count_Display_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000066  00800060  000007c2  00000856  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  008000c6  008000c6  000008bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001932  00000000  00000000  000009f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006fc  00000000  00000000  0000232a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b87  00000000  00000000  00002a26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ec  00000000  00000000  000035b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b7  00000000  00000000  0000379c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cd7  00000000  00000000  00003c53  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000492a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ec       	ldi	r30, 0xC2	; 194
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3c       	cpi	r26, 0xC6	; 198
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 ec       	ldi	r26, 0xC6	; 198
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 3d       	cpi	r26, 0xD6	; 214
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 54 03 	call	0x6a8	; 0x6a8 <main>
  8a:	0c 94 df 03 	jmp	0x7be	; 0x7be <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	82 e2       	ldi	r24, 0x22	; 34
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	82 e2       	ldi	r24, 0x22	; 34
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	83 e2       	ldi	r24, 0x23	; 35
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	83 e2       	ldi	r24, 0x23	; 35
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	84 e2       	ldi	r24, 0x24	; 36
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	84 e2       	ldi	r24, 0x24	; 36
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	85 e2       	ldi	r24, 0x25	; 37
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	85 e2       	ldi	r24, 0x25	; 37
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	8a e1       	ldi	r24, 0x1A	; 26
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	8b e1       	ldi	r24, 0x1B	; 27
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	89 ef       	ldi	r24, 0xF9	; 249
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	8b e1       	ldi	r24, 0x1B	; 27
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	89 ef       	ldi	r24, 0xF9	; 249
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Set_Cursor>:
 3dc:	cf 93       	push	r28
 3de:	c6 2f       	mov	r28, r22
 3e0:	81 30       	cpi	r24, 0x01	; 1
 3e2:	59 f4       	brne	.+22     	; 0x3fa <Lcd4_Set_Cursor+0x1e>
 3e4:	80 e8       	ldi	r24, 0x80	; 128
 3e6:	86 0f       	add	r24, r22
 3e8:	82 95       	swap	r24
 3ea:	8f 70       	andi	r24, 0x0F	; 15
 3ec:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f0:	8c 2f       	mov	r24, r28
 3f2:	8f 70       	andi	r24, 0x0F	; 15
 3f4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f8:	0c c0       	rjmp	.+24     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fa:	82 30       	cpi	r24, 0x02	; 2
 3fc:	51 f4       	brne	.+20     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fe:	80 ec       	ldi	r24, 0xC0	; 192
 400:	86 0f       	add	r24, r22
 402:	82 95       	swap	r24
 404:	8f 70       	andi	r24, 0x0F	; 15
 406:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 40a:	8c 2f       	mov	r24, r28
 40c:	8f 70       	andi	r24, 0x0F	; 15
 40e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 412:	cf 91       	pop	r28
 414:	08 95       	ret

00000416 <Lcd4_Init>:
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 41c:	87 e8       	ldi	r24, 0x87	; 135
 41e:	93 e1       	ldi	r25, 0x13	; 19
 420:	01 97       	sbiw	r24, 0x01	; 1
 422:	f1 f7       	brne	.-4      	; 0x420 <Lcd4_Init+0xa>
 424:	00 c0       	rjmp	.+0      	; 0x426 <Lcd4_Init+0x10>
 426:	00 00       	nop
 428:	83 e0       	ldi	r24, 0x03	; 3
 42a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 42e:	81 ee       	ldi	r24, 0xE1	; 225
 430:	94 e0       	ldi	r25, 0x04	; 4
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <Lcd4_Init+0x1c>
 436:	00 c0       	rjmp	.+0      	; 0x438 <Lcd4_Init+0x22>
 438:	00 00       	nop
 43a:	83 e0       	ldi	r24, 0x03	; 3
 43c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 440:	8d eb       	ldi	r24, 0xBD	; 189
 442:	9a e0       	ldi	r25, 0x0A	; 10
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	f1 f7       	brne	.-4      	; 0x444 <Lcd4_Init+0x2e>
 448:	00 c0       	rjmp	.+0      	; 0x44a <Lcd4_Init+0x34>
 44a:	00 00       	nop
 44c:	83 e0       	ldi	r24, 0x03	; 3
 44e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 452:	82 e0       	ldi	r24, 0x02	; 2
 454:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 45e:	88 e0       	ldi	r24, 0x08	; 8
 460:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46a:	8c e0       	ldi	r24, 0x0C	; 12
 46c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 476:	86 e0       	ldi	r24, 0x06	; 6
 478:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47c:	08 95       	ret

0000047e <Lcd4_Write_Char>:
 47e:	cf 93       	push	r28
 480:	c8 2f       	mov	r28, r24
 482:	61 e0       	ldi	r22, 0x01	; 1
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	8a e1       	ldi	r24, 0x1A	; 26
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 48e:	8c 2f       	mov	r24, r28
 490:	82 95       	swap	r24
 492:	8f 70       	andi	r24, 0x0F	; 15
 494:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 498:	61 e0       	ldi	r22, 0x01	; 1
 49a:	70 e0       	ldi	r23, 0x00	; 0
 49c:	8b e1       	ldi	r24, 0x1B	; 27
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4a4:	89 ef       	ldi	r24, 0xF9	; 249
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	01 97       	sbiw	r24, 0x01	; 1
 4aa:	f1 f7       	brne	.-4      	; 0x4a8 <Lcd4_Write_Char+0x2a>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <Lcd4_Write_Char+0x30>
 4ae:	00 00       	nop
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	8b e1       	ldi	r24, 0x1B	; 27
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4bc:	89 ef       	ldi	r24, 0xF9	; 249
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <Lcd4_Write_Char+0x42>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <Lcd4_Write_Char+0x48>
 4c6:	00 00       	nop
 4c8:	8c 2f       	mov	r24, r28
 4ca:	8f 70       	andi	r24, 0x0F	; 15
 4cc:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4d0:	61 e0       	ldi	r22, 0x01	; 1
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	8b e1       	ldi	r24, 0x1B	; 27
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4dc:	89 ef       	ldi	r24, 0xF9	; 249
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	01 97       	sbiw	r24, 0x01	; 1
 4e2:	f1 f7       	brne	.-4      	; 0x4e0 <Lcd4_Write_Char+0x62>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <Lcd4_Write_Char+0x68>
 4e6:	00 00       	nop
 4e8:	60 e0       	ldi	r22, 0x00	; 0
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	8b e1       	ldi	r24, 0x1B	; 27
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4f4:	89 ef       	ldi	r24, 0xF9	; 249
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	01 97       	sbiw	r24, 0x01	; 1
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <Lcd4_Write_Char+0x7a>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <Lcd4_Write_Char+0x80>
 4fe:	00 00       	nop
 500:	cf 91       	pop	r28
 502:	08 95       	ret

00000504 <Lcd4_Write_String>:
 504:	cf 93       	push	r28
 506:	df 93       	push	r29
 508:	ec 01       	movw	r28, r24
 50a:	88 81       	ld	r24, Y
 50c:	88 23       	and	r24, r24
 50e:	31 f0       	breq	.+12     	; 0x51c <Lcd4_Write_String+0x18>
 510:	21 96       	adiw	r28, 0x01	; 1
 512:	0e 94 3f 02 	call	0x47e	; 0x47e <Lcd4_Write_Char>
 516:	89 91       	ld	r24, Y+
 518:	81 11       	cpse	r24, r1
 51a:	fb cf       	rjmp	.-10     	; 0x512 <Lcd4_Write_String+0xe>
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	08 95       	ret

00000522 <lcdDisplay>:

int apple = 0, orange = 0, banana = 0, total = 0;
char output[OUTPUT_SIZE+1];
int i, temp;

void lcdDisplay(int pos, int cursor, int number) {
 522:	cf 93       	push	r28
 524:	df 93       	push	r29
 526:	ea 01       	movw	r28, r20
	Lcd4_Set_Cursor(pos,cursor);
 528:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	output[OUTPUT_SIZE]='\0';
 52c:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <output+0x3>
	i=OUTPUT_SIZE-1, temp=number;
 530:	d0 93 d3 00 	sts	0x00D3, r29	; 0x8000d3 <temp+0x1>
 534:	c0 93 d2 00 	sts	0x00D2, r28	; 0x8000d2 <temp>
	if(!temp) output[i--]='0';
 538:	20 97       	sbiw	r28, 0x00	; 0
 53a:	09 f0       	breq	.+2      	; 0x53e <lcdDisplay+0x1c>
 53c:	40 c0       	rjmp	.+128    	; 0x5be <lcdDisplay+0x9c>
 53e:	80 e3       	ldi	r24, 0x30	; 48
 540:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <output+0x2>
	while(temp&&i>=0) {
		output[i--]=temp%10 + '0';
		temp/=10;
	}
	while(i>=0) output[i--]=' ';
 544:	21 e0       	ldi	r18, 0x01	; 1
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	25 c0       	rjmp	.+74     	; 0x594 <lcdDisplay+0x72>
	Lcd4_Set_Cursor(pos,cursor);
	output[OUTPUT_SIZE]='\0';
	i=OUTPUT_SIZE-1, temp=number;
	if(!temp) output[i--]='0';
	while(temp&&i>=0) {
		output[i--]=temp%10 + '0';
 54a:	21 50       	subi	r18, 0x01	; 1
 54c:	31 09       	sbc	r19, r1
 54e:	be 01       	movw	r22, r28
 550:	0e 94 b7 03 	call	0x76e	; 0x76e <__divmodhi4>
 554:	80 5d       	subi	r24, 0xD0	; 208
 556:	82 93       	st	-Z, r24
		temp/=10;
 558:	86 2f       	mov	r24, r22
 55a:	97 2f       	mov	r25, r23
void lcdDisplay(int pos, int cursor, int number) {
	Lcd4_Set_Cursor(pos,cursor);
	output[OUTPUT_SIZE]='\0';
	i=OUTPUT_SIZE-1, temp=number;
	if(!temp) output[i--]='0';
	while(temp&&i>=0) {
 55c:	00 97       	sbiw	r24, 0x00	; 0
 55e:	59 f4       	brne	.+22     	; 0x576 <lcdDisplay+0x54>
 560:	30 93 d5 00 	sts	0x00D5, r19	; 0x8000d5 <i+0x1>
 564:	20 93 d4 00 	sts	0x00D4, r18	; 0x8000d4 <i>
 568:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <temp+0x1>
 56c:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <temp>
		output[i--]=temp%10 + '0';
		temp/=10;
	}
	while(i>=0) output[i--]=' ';
 570:	33 23       	and	r19, r19
 572:	84 f4       	brge	.+32     	; 0x594 <lcdDisplay+0x72>
 574:	1f c0       	rjmp	.+62     	; 0x5b4 <lcdDisplay+0x92>
void lcdDisplay(int pos, int cursor, int number) {
	Lcd4_Set_Cursor(pos,cursor);
	output[OUTPUT_SIZE]='\0';
	i=OUTPUT_SIZE-1, temp=number;
	if(!temp) output[i--]='0';
	while(temp&&i>=0) {
 576:	2f 3f       	cpi	r18, 0xFF	; 255
 578:	4f ef       	ldi	r20, 0xFF	; 255
 57a:	34 07       	cpc	r19, r20
 57c:	31 f7       	brne	.-52     	; 0x54a <lcdDisplay+0x28>
 57e:	2f ef       	ldi	r18, 0xFF	; 255
 580:	3f ef       	ldi	r19, 0xFF	; 255
 582:	30 93 d5 00 	sts	0x00D5, r19	; 0x8000d5 <i+0x1>
 586:	20 93 d4 00 	sts	0x00D4, r18	; 0x8000d4 <i>
 58a:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <temp+0x1>
 58e:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <temp>
 592:	10 c0       	rjmp	.+32     	; 0x5b4 <lcdDisplay+0x92>
 594:	f9 01       	movw	r30, r18
 596:	e1 53       	subi	r30, 0x31	; 49
 598:	ff 4f       	sbci	r31, 0xFF	; 255
 59a:	2e ec       	ldi	r18, 0xCE	; 206
 59c:	30 e0       	ldi	r19, 0x00	; 0
		output[i--]=temp%10 + '0';
		temp/=10;
	}
	while(i>=0) output[i--]=' ';
 59e:	80 e2       	ldi	r24, 0x20	; 32
 5a0:	82 93       	st	-Z, r24
 5a2:	e2 17       	cp	r30, r18
 5a4:	f3 07       	cpc	r31, r19
 5a6:	e1 f7       	brne	.-8      	; 0x5a0 <lcdDisplay+0x7e>
 5a8:	8f ef       	ldi	r24, 0xFF	; 255
 5aa:	9f ef       	ldi	r25, 0xFF	; 255
 5ac:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <i+0x1>
 5b0:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <i>
	Lcd4_Write_String(output);
 5b4:	8e ec       	ldi	r24, 0xCE	; 206
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
}
 5bc:	08 c0       	rjmp	.+16     	; 0x5ce <lcdDisplay+0xac>
 5be:	e1 ed       	ldi	r30, 0xD1	; 209
 5c0:	f0 e0       	ldi	r31, 0x00	; 0

void lcdDisplay(int pos, int cursor, int number) {
	Lcd4_Set_Cursor(pos,cursor);
	output[OUTPUT_SIZE]='\0';
	i=OUTPUT_SIZE-1, temp=number;
	if(!temp) output[i--]='0';
 5c2:	ce 01       	movw	r24, r28
 5c4:	22 e0       	ldi	r18, 0x02	; 2
 5c6:	30 e0       	ldi	r19, 0x00	; 0
	while(temp&&i>=0) {
		output[i--]=temp%10 + '0';
 5c8:	ca e0       	ldi	r28, 0x0A	; 10
 5ca:	d0 e0       	ldi	r29, 0x00	; 0
 5cc:	be cf       	rjmp	.-132    	; 0x54a <lcdDisplay+0x28>
		temp/=10;
	}
	while(i>=0) output[i--]=' ';
	Lcd4_Write_String(output);
}
 5ce:	df 91       	pop	r29
 5d0:	cf 91       	pop	r28
 5d2:	08 95       	ret

000005d4 <updateLcd>:

void updateLcd() {
	Lcd4_Set_Cursor(1,0);
 5d4:	60 e0       	ldi	r22, 0x00	; 0
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_String("Ap:   0, Or:   0"); //4-6, 13-15
 5dc:	80 e6       	ldi	r24, 0x60	; 96
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
 5e4:	60 e0       	ldi	r22, 0x00	; 0
 5e6:	82 e0       	ldi	r24, 0x02	; 2
 5e8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_String("Ba:   0, To:   0"); //4-6, 13-15
 5ec:	81 e7       	ldi	r24, 0x71	; 113
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
	lcdDisplay(1,4,apple);
 5f4:	40 91 cc 00 	lds	r20, 0x00CC	; 0x8000cc <apple>
 5f8:	50 91 cd 00 	lds	r21, 0x00CD	; 0x8000cd <apple+0x1>
 5fc:	64 e0       	ldi	r22, 0x04	; 4
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 91 02 	call	0x522	; 0x522 <lcdDisplay>
	lcdDisplay(1,13,orange);
 608:	40 91 ca 00 	lds	r20, 0x00CA	; 0x8000ca <orange>
 60c:	50 91 cb 00 	lds	r21, 0x00CB	; 0x8000cb <orange+0x1>
 610:	6d e0       	ldi	r22, 0x0D	; 13
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 91 02 	call	0x522	; 0x522 <lcdDisplay>
	lcdDisplay(2,4,banana);
 61c:	40 91 c8 00 	lds	r20, 0x00C8	; 0x8000c8 <banana>
 620:	50 91 c9 00 	lds	r21, 0x00C9	; 0x8000c9 <banana+0x1>
 624:	64 e0       	ldi	r22, 0x04	; 4
 626:	70 e0       	ldi	r23, 0x00	; 0
 628:	82 e0       	ldi	r24, 0x02	; 2
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 94 91 02 	call	0x522	; 0x522 <lcdDisplay>
	lcdDisplay(2,13,total);
 630:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__data_end>
 634:	50 91 c7 00 	lds	r21, 0x00C7	; 0x8000c7 <__data_end+0x1>
 638:	6d e0       	ldi	r22, 0x0D	; 13
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	82 e0       	ldi	r24, 0x02	; 2
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 91 02 	call	0x522	; 0x522 <lcdDisplay>
 644:	08 95       	ret

00000646 <displayName>:
}

void displayName(int t) {
 646:	cf 93       	push	r28
 648:	df 93       	push	r29
 64a:	ec 01       	movw	r28, r24
	Lcd4_Set_Cursor(1,0);
 64c:	60 e0       	ldi	r22, 0x00	; 0
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	if(t==1)
 654:	c1 30       	cpi	r28, 0x01	; 1
 656:	d1 05       	cpc	r29, r1
 658:	29 f4       	brne	.+10     	; 0x664 <displayName+0x1e>
	Lcd4_Write_String("Orange          ");
 65a:	82 e8       	ldi	r24, 0x82	; 130
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
 662:	0e c0       	rjmp	.+28     	; 0x680 <displayName+0x3a>
	else if(t==2)
 664:	c2 30       	cpi	r28, 0x02	; 2
 666:	d1 05       	cpc	r29, r1
 668:	29 f4       	brne	.+10     	; 0x674 <displayName+0x2e>
	Lcd4_Write_String("Apple           ");
 66a:	83 e9       	ldi	r24, 0x93	; 147
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
 672:	06 c0       	rjmp	.+12     	; 0x680 <displayName+0x3a>
	else if(t==3)
 674:	23 97       	sbiw	r28, 0x03	; 3
 676:	21 f4       	brne	.+8      	; 0x680 <displayName+0x3a>
	Lcd4_Write_String("Banana          ");
 678:	84 ea       	ldi	r24, 0xA4	; 164
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
 680:	60 e0       	ldi	r22, 0x00	; 0
 682:	82 e0       	ldi	r24, 0x02	; 2
 684:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_String("                ");
 688:	85 eb       	ldi	r24, 0xB5	; 181
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 690:	2f e3       	ldi	r18, 0x3F	; 63
 692:	8d e0       	ldi	r24, 0x0D	; 13
 694:	93 e0       	ldi	r25, 0x03	; 3
 696:	21 50       	subi	r18, 0x01	; 1
 698:	80 40       	sbci	r24, 0x00	; 0
 69a:	90 40       	sbci	r25, 0x00	; 0
 69c:	e1 f7       	brne	.-8      	; 0x696 <displayName+0x50>
 69e:	00 c0       	rjmp	.+0      	; 0x6a0 <displayName+0x5a>
 6a0:	00 00       	nop
	_delay_ms(1000);
}
 6a2:	df 91       	pop	r29
 6a4:	cf 91       	pop	r28
 6a6:	08 95       	ret

000006a8 <main>:

int main(void)
{
	//_delay_ms(5000);
	DDRB = 0x00;
 6a8:	17 ba       	out	0x17, r1	; 23
	DDRD = 0xFF;
 6aa:	8f ef       	ldi	r24, 0xFF	; 255
 6ac:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 6ae:	84 bb       	out	0x14, r24	; 20
	Lcd4_Init();
 6b0:	0e 94 0b 02 	call	0x416	; 0x416 <Lcd4_Init>
	
	Lcd4_Set_Cursor(1,0);
 6b4:	60 e0       	ldi	r22, 0x00	; 0
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_String("Ap:   0, Or:   0"); //4-6, 13-15
 6bc:	80 e6       	ldi	r24, 0x60	; 96
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
 6c4:	60 e0       	ldi	r22, 0x00	; 0
 6c6:	82 e0       	ldi	r24, 0x02	; 2
 6c8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
	Lcd4_Write_String("Ba:   0, To:   0"); //4-6, 13-15
 6cc:	81 e7       	ldi	r24, 0x71	; 113
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_String>
	
	int status = 5, prev= 5;
 6d4:	85 e0       	ldi	r24, 0x05	; 5
 6d6:	90 e0       	ldi	r25, 0x00	; 0
	
	while(1)
	{
		int tmp = PINB;
 6d8:	c6 b3       	in	r28, 0x16	; 22
		prev = status;
		status = tmp&3;
 6da:	c3 70       	andi	r28, 0x03	; 3
 6dc:	d0 e0       	ldi	r29, 0x00	; 0
		if(status!=prev&&status) {
 6de:	8c 17       	cp	r24, r28
 6e0:	9d 07       	cpc	r25, r29
 6e2:	e9 f1       	breq	.+122    	; 0x75e <main+0xb6>
 6e4:	20 97       	sbiw	r28, 0x00	; 0
 6e6:	d9 f1       	breq	.+118    	; 0x75e <main+0xb6>
			total++;
 6e8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__data_end>
 6ec:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <__data_end+0x1>
 6f0:	9c 01       	movw	r18, r24
 6f2:	2f 5f       	subi	r18, 0xFF	; 255
 6f4:	3f 4f       	sbci	r19, 0xFF	; 255
 6f6:	30 93 c7 00 	sts	0x00C7, r19	; 0x8000c7 <__data_end+0x1>
 6fa:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__data_end>
			if (status==1)
 6fe:	c1 30       	cpi	r28, 0x01	; 1
 700:	d1 05       	cpc	r29, r1
 702:	51 f4       	brne	.+20     	; 0x718 <main+0x70>
			orange++;
 704:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <orange>
 708:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <orange+0x1>
 70c:	01 96       	adiw	r24, 0x01	; 1
 70e:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <orange+0x1>
 712:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <orange>
 716:	1e c0       	rjmp	.+60     	; 0x754 <main+0xac>
			else if (status==2)
 718:	c2 30       	cpi	r28, 0x02	; 2
 71a:	d1 05       	cpc	r29, r1
 71c:	51 f4       	brne	.+20     	; 0x732 <main+0x8a>
			apple++;
 71e:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <apple>
 722:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <apple+0x1>
 726:	01 96       	adiw	r24, 0x01	; 1
 728:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <apple+0x1>
 72c:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <apple>
 730:	11 c0       	rjmp	.+34     	; 0x754 <main+0xac>
			else if (status==3)
 732:	c3 30       	cpi	r28, 0x03	; 3
 734:	d1 05       	cpc	r29, r1
 736:	51 f4       	brne	.+20     	; 0x74c <main+0xa4>
			banana++;
 738:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <banana>
 73c:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <banana+0x1>
 740:	01 96       	adiw	r24, 0x01	; 1
 742:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <banana+0x1>
 746:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <banana>
 74a:	04 c0       	rjmp	.+8      	; 0x754 <main+0xac>
			else
			total--;
 74c:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <__data_end+0x1>
 750:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__data_end>
			displayName(status);
 754:	ce 01       	movw	r24, r28
 756:	0e 94 23 03 	call	0x646	; 0x646 <displayName>
			updateLcd();
 75a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <updateLcd>
 75e:	83 ed       	ldi	r24, 0xD3	; 211
 760:	90 e3       	ldi	r25, 0x30	; 48
 762:	01 97       	sbiw	r24, 0x01	; 1
 764:	f1 f7       	brne	.-4      	; 0x762 <main+0xba>
 766:	00 c0       	rjmp	.+0      	; 0x768 <main+0xc0>
 768:	00 00       	nop
	
	while(1)
	{
		int tmp = PINB;
		prev = status;
		status = tmp&3;
 76a:	ce 01       	movw	r24, r28
 76c:	b5 cf       	rjmp	.-150    	; 0x6d8 <main+0x30>

0000076e <__divmodhi4>:
 76e:	97 fb       	bst	r25, 7
 770:	07 2e       	mov	r0, r23
 772:	16 f4       	brtc	.+4      	; 0x778 <__divmodhi4+0xa>
 774:	00 94       	com	r0
 776:	07 d0       	rcall	.+14     	; 0x786 <__divmodhi4_neg1>
 778:	77 fd       	sbrc	r23, 7
 77a:	09 d0       	rcall	.+18     	; 0x78e <__divmodhi4_neg2>
 77c:	0e 94 cb 03 	call	0x796	; 0x796 <__udivmodhi4>
 780:	07 fc       	sbrc	r0, 7
 782:	05 d0       	rcall	.+10     	; 0x78e <__divmodhi4_neg2>
 784:	3e f4       	brtc	.+14     	; 0x794 <__divmodhi4_exit>

00000786 <__divmodhi4_neg1>:
 786:	90 95       	com	r25
 788:	81 95       	neg	r24
 78a:	9f 4f       	sbci	r25, 0xFF	; 255
 78c:	08 95       	ret

0000078e <__divmodhi4_neg2>:
 78e:	70 95       	com	r23
 790:	61 95       	neg	r22
 792:	7f 4f       	sbci	r23, 0xFF	; 255

00000794 <__divmodhi4_exit>:
 794:	08 95       	ret

00000796 <__udivmodhi4>:
 796:	aa 1b       	sub	r26, r26
 798:	bb 1b       	sub	r27, r27
 79a:	51 e1       	ldi	r21, 0x11	; 17
 79c:	07 c0       	rjmp	.+14     	; 0x7ac <__udivmodhi4_ep>

0000079e <__udivmodhi4_loop>:
 79e:	aa 1f       	adc	r26, r26
 7a0:	bb 1f       	adc	r27, r27
 7a2:	a6 17       	cp	r26, r22
 7a4:	b7 07       	cpc	r27, r23
 7a6:	10 f0       	brcs	.+4      	; 0x7ac <__udivmodhi4_ep>
 7a8:	a6 1b       	sub	r26, r22
 7aa:	b7 0b       	sbc	r27, r23

000007ac <__udivmodhi4_ep>:
 7ac:	88 1f       	adc	r24, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	5a 95       	dec	r21
 7b2:	a9 f7       	brne	.-22     	; 0x79e <__udivmodhi4_loop>
 7b4:	80 95       	com	r24
 7b6:	90 95       	com	r25
 7b8:	bc 01       	movw	r22, r24
 7ba:	cd 01       	movw	r24, r26
 7bc:	08 95       	ret

000007be <_exit>:
 7be:	f8 94       	cli

000007c0 <__stop_program>:
 7c0:	ff cf       	rjmp	.-2      	; 0x7c0 <__stop_program>
